name: TEST
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            goos: linux
            goarch: amd64
          - os: ubuntu-latest
            goos: linux
            goarch: arm64
          - os: macos-latest
            goos: darwin
            goarch: amd64
          - os: macos-latest
            goos: darwin
            goarch: arm64
          - os: windows-latest
            goos: windows
            goarch: amd64

    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      CGO_ENABLED: 0

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.12'

    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8

    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21.4'

    - name: Build frontend
      run: |
        cd web
        pnpm install --frozen-lockfile
        pnpm type-gen
        pnpm build

    - name: Install cross-compilation tools (Ubuntu ARM64)
      if: matrix.os == 'ubuntu-latest' && matrix.goarch == 'arm64'
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-aarch64-linux-gnu
        echo "CC=aarch64-linux-gnu-gcc" >> $GITHUB_ENV

    - name: Build backend
      run: |
        mkdir -p memos/dist
        cp -r web/dist/* memos/dist/
        go build -o memos/memos-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.exe' || '' }} ./bin/memos/main.go

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: memos-binary-${{ matrix.goos }}-${{ matrix.goarch }}
        path: memos/*

